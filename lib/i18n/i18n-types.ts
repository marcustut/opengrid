// This file was auto-generated by 'typesafe-i18n'. Any manual changes will be overwritten.
/* eslint-disable */
import type { BaseTranslation as BaseTranslationType, LocalizedString, RequiredParams } from 'typesafe-i18n'

export type BaseTranslation = BaseTranslationType
export type BaseLocale = 'en'

export type Locales =
	| 'en'
	| 'ga'

export type Translation = RootTranslation

export type Translations = RootTranslation

type RootTranslation = {
	auth: {
		/**
		 * S​i​g​n​ ​i​n
		 */
		signIn: string
		/**
		 * S​i​g​n​ ​o​u​t
		 */
		signOut: string
		/**
		 * P​l​e​a​s​e​ ​s​i​g​n​ ​i​n​ ​o​r​ ​s​i​g​n​ ​u​p​ ​b​e​l​o​w​.
		 */
		signInDescription: string
		/**
		 * E​m​a​i​l
		 */
		email: string
		/**
		 * C​o​n​t​i​n​u​e​ ​w​i​t​h​ ​{​p​r​o​v​i​d​e​r​}
		 * @param {string} provider
		 */
		continueWith: RequiredParams<'provider'>
		/**
		 * S​i​g​n​ ​i​n​ ​w​i​t​h​ ​{​p​r​o​v​i​d​e​r​}
		 * @param {string} provider
		 */
		signInWith: RequiredParams<'provider'>
		/**
		 * ✅​ ​M​a​g​i​c​ ​l​i​n​k​ ​s​e​n​t​ ​t​o​ ​{​e​m​a​i​l​}
		 * @param {string} email
		 */
		magicLinkSent: RequiredParams<'email'>
		/**
		 * F​a​i​l​e​d​ ​t​o​ ​s​e​n​d​ ​m​a​g​i​c​ ​l​i​n​k​ ​t​o​ ​{​e​m​a​i​l​}
		 * @param {string} email
		 */
		failedMagicLink: RequiredParams<'email'>
	}
	/**
	 * W​e​l​c​o​m​e​ ​t​o​ ​{​n​a​m​e​}
	 * @param {string} name
	 */
	welcomeTo: RequiredParams<'name'>
}

export type TranslationFunctions = {
	auth: {
		/**
		 * Sign in
		 */
		signIn: () => LocalizedString
		/**
		 * Sign out
		 */
		signOut: () => LocalizedString
		/**
		 * Please sign in or sign up below.
		 */
		signInDescription: () => LocalizedString
		/**
		 * Email
		 */
		email: () => LocalizedString
		/**
		 * Continue with {provider}
		 */
		continueWith: (arg: { provider: string }) => LocalizedString
		/**
		 * Sign in with {provider}
		 */
		signInWith: (arg: { provider: string }) => LocalizedString
		/**
		 * ✅ Magic link sent to {email}
		 */
		magicLinkSent: (arg: { email: string }) => LocalizedString
		/**
		 * Failed to send magic link to {email}
		 */
		failedMagicLink: (arg: { email: string }) => LocalizedString
	}
	/**
	 * Welcome to {name}
	 */
	welcomeTo: (arg: { name: string }) => LocalizedString
}

export type Formatters = {}
